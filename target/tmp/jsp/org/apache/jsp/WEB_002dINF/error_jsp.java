/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.46.v20220331
 * Generated at: 2025-09-05 21:18:44 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class error_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    java.lang.Throwable exception = org.apache.jasper.runtime.JspRuntimeLibrary.getThrowable(request);
    if (exception != null) {
      response.setStatus(javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    }
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Error - Todo List App</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../css/style.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .error-container {\r\n");
      out.write("            max-width: 600px;\r\n");
      out.write("            margin: 50px auto;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            padding: 40px;\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 20px;\r\n");
      out.write("            box-shadow: 0 20px 40px rgba(0,0,0,0.1);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-icon {\r\n");
      out.write("            font-size: 4rem;\r\n");
      out.write("            color: #dc3545;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-title {\r\n");
      out.write("            font-size: 2rem;\r\n");
      out.write("            color: #343a40;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-message {\r\n");
      out.write("            color: #6c757d;\r\n");
      out.write("            font-size: 1.1rem;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-actions {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            gap: 15px;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-btn {\r\n");
      out.write("            padding: 12px 24px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            transition: all 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-btn-primary {\r\n");
      out.write("            background: #6c5ce7;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-btn-primary:hover {\r\n");
      out.write("            background: #5b4cdb;\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-btn-secondary {\r\n");
      out.write("            background: #6c757d;\r\n");
      out.write("            color: white;\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-btn-secondary:hover {\r\n");
      out.write("            background: #5a6268;\r\n");
      out.write("            transform: translateY(-2px);\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        .error-details {\r\n");
      out.write("            margin-top: 30px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            background: #f8f9fa;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("            font-family: 'Courier New', monospace;\r\n");
      out.write("            font-size: 0.9rem;\r\n");
      out.write("            color: #495057;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"error-container\">\r\n");
      out.write("        <div class=\"error-icon\">⚠️</div>\r\n");
      out.write("        \r\n");
      out.write("        ");

            String errorCode = String.valueOf(response.getStatus());
            String errorTitle = "An Error Occurred";
            String errorMessage = "Something went wrong while processing your request.";
            
            if ("404".equals(errorCode)) {
                errorTitle = "Page Not Found";
                errorMessage = "The page you're looking for doesn't exist or has been moved.";
            } else if ("500".equals(errorCode)) {
                errorTitle = "Server Error";
                errorMessage = "There was an internal server error. Please try again later.";
            }
        
      out.write("\r\n");
      out.write("        \r\n");
      out.write("        <h1 class=\"error-title\">");
      out.print(errorTitle);
      out.write("</h1>\r\n");
      out.write("        <p class=\"error-message\">");
      out.print(errorMessage);
      out.write("</p>\r\n");
      out.write("        \r\n");
      out.write("        <div class=\"error-actions\">\r\n");
      out.write("            <a href=\"../todos\" class=\"error-btn error-btn-primary\">Go to Todo List</a>\r\n");
      out.write("            <a href=\"javascript:history.back()\" class=\"error-btn error-btn-secondary\">Go Back</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        ");
 if (request.getAttribute("javax.servlet.error.exception") != null) { 
      out.write("\r\n");
      out.write("        <div class=\"error-details\">\r\n");
      out.write("            <strong>Error Code:</strong> ");
      out.print(errorCode);
      out.write("<br>\r\n");
      out.write("            <strong>Request URI:</strong> ");
      out.print(request.getAttribute("javax.servlet.error.request_uri"));
      out.write("<br>\r\n");
      out.write("            <strong>Servlet Name:</strong> ");
      out.print(request.getAttribute("javax.servlet.error.servlet_name"));
      out.write("<br>\r\n");
      out.write("            <strong>Exception:</strong> ");
      out.print(request.getAttribute("javax.servlet.error.exception"));
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("        // Auto redirect to home after 10 seconds for 404 errors\r\n");
      out.write("        if (window.location.search.includes('404')) {\r\n");
      out.write("            setTimeout(function() {\r\n");
      out.write("                if (confirm('Would you like to be redirected to the todo list?')) {\r\n");
      out.write("                    window.location.href = '../todos';\r\n");
      out.write("                }\r\n");
      out.write("            }, 10000);\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
